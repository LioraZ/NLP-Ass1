Part 1:
A. The program generates many long sentences, since the grammar rule NP→NP PP recurses, and with a high probability stop after quite a number of recursions, making the sentence very long. In addition, there are quite a few rules leading to an NP development, making the above rule pretty common.
B. Our grammar doesn’t generate multiple adjectives very commonly, since an adjective is only one out of 11 tags in the given grammar and appears only once out of the 6 rules (not including the root). Therefore, when we land on the Noun→Adj Noun rule, the probability to produce an adjective is 1/6,  to produce 2 adjectives in a row is 1/36, and so on.
C. In order to produce shorter sentences, we’ll need to increase the weight of all NP rules of NP other than NP→NP PP (we will get more NP’s which are likely to lead to terminals, and will not get stuck in a long recursive NP→NP PP). Doing this, the weights of the Noun→Adj Noun will increase, making adjectives more common (in addition to the terminal nouns).
D. We made other numeric adjustments to the weights, such as majorly increasing the rule NP→Det Noun, since both are preterminal.

Part 2:
We made quite a number of modifications to our grammar, which includes,

Part 4:
“A” vs. “An”: fff
Tenses: ffff
